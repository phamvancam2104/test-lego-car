// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define LegoCarFactoryRefactoringForSync_LegoCarComponents_Modules_Roof_RoofModuleSystem_BODY

/************************************************************
 RoofModuleSystem class body
 ************************************************************/

// include associated header file
#include "LegoCarFactoryRefactoringForSync/LegoCarComponents/Modules/Roof/RoofModuleSystem.h"

// Derived includes directives

namespace LegoCarFactoryRefactoringForSync {
namespace LegoCarComponents {
namespace Modules {
namespace Roof {

// static attributes (if any)

/**
 * 
 */
RoofModuleSystem::RoofModuleSystem() :
		roofmodulesystemController(this) {
}

/**
 * 
 */
void RoofModuleSystem::connectorConfiguration() {
	bindPorts(robotic_arm.pDelivered, convoyer.pDelivered);
	bindPorts(control.pOutStopProcess_Shelf, shelf.pInStopProcess);
	bindPorts(control.pOutStopProcess_RoboticArm, robotic_arm.pInStopProcess);
	bindPorts(control.pStopProcess_Convoyer, convoyer.pInStopProcess);
	bindPorts(control.pOutRestart_Shelf, shelf.pInRestart);
	bindPorts(control.pOutRestart_Convoyer, convoyer.pRestart);
	bindPorts(control.pOutRestart_Robotic, robotic_arm.pInRestart);
	bindPorts(convoyer.pCheckRack, shelf.pCheckRack);
	bindPorts(control.pErrDetect, shelf.pErrDetect);
	bindPorts(control.pEndOfMo, convoyer.pEndOfMo_Control);
	bindPorts(convoyer.pEndOfMo_Shelf, shelf.pEndOfMo);
	bindPorts(robotic_arm.pEndOfMo, convoyer.pEndOfMo_Robotic);
	bindPorts(shelf.pPickPiece, robotic_arm.pPickPiece);
	bindPorts(control.pFloatMotor, robotic_arm.pFloatMotor);
	bindPorts(control.pLargeMotor_Convoyer, convoyer.pLargeMotor);
	bindPorts(control.pLargeMotor_Press, press.pILargeMotor);
	bindPorts(control.pStopProcess_Press, press.pInStopProcess);
	bindPorts(control.pOutRestart_Press, press.pInRestart);
	bindPorts(control.pOutDelivered, convoyer.pDelivered);
	bindPorts(control.pOutCheckRack, shelf.pCheckRack);
	bindPorts(convoyer.pPressAssemble, press.pPressAssemble);
	bindPorts(convoyer.pEndOfMo_Press, press.pEndOfMo);
	bindPorts(robotic_arm.pOutGotoProcess, convoyer.pGotoProcess);
}

} // of namespace Roof
} // of namespace Modules
} // of namespace LegoCarComponents
} // of namespace LegoCarFactoryRefactoringForSync

/************************************************************
 End of RoofModuleSystem class body
 ************************************************************/
