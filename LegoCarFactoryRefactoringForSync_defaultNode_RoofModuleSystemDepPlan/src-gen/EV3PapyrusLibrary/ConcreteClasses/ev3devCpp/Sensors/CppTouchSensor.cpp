// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define EV3PapyrusLibrary_ConcreteClasses_ev3devCpp_Sensors_CppTouchSensor_BODY

/************************************************************
 CppTouchSensor class body
 ************************************************************/

// include associated header file
#include "EV3PapyrusLibrary/ConcreteClasses/ev3devCpp/Sensors/CppTouchSensor.h"

// Derived includes directives
#include "EV3PapyrusLibrary/Interfaces/Sensors/ITouchSensor.h"

namespace EV3PapyrusLibrary {
namespace ConcreteClasses {
namespace ev3devCpp {
namespace Sensors {

// static attributes (if any)

/**
 * generated comment
 * @return ret 
 * @param index 
 */
::PrimitiveTypes::Integer CppTouchSensor::value(unsigned int /*in*/index) {
	return referencedTouch_sensor.value(index);
}

/**
 * generated comment
 * @return ret 
 * @param index 
 */
float CppTouchSensor::float_value(unsigned int /*in*/index) {
	return referencedTouch_sensor.float_value(index);
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::type_name() {
	return referencedTouch_sensor.type_name();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::bin_data_format() {
	return referencedTouch_sensor.bin_data_format();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::CustomVectorChar CppTouchSensor::bin_data() {
	return referencedTouch_sensor.bin_data();
}

/**
 * generated comment
 * @param v 
 */
void CppTouchSensor::set_command(
		::EV3PapyrusLibrary::Types::LocalString /*in*/v) {
	referencedTouch_sensor.set_command(v);
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::ModeSet CppTouchSensor::commands() {
	return referencedTouch_sensor.commands();
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppTouchSensor::decimals() {
	return referencedTouch_sensor.decimals();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::driver_name() {
	return referencedTouch_sensor.driver_name();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::mode() {
	return referencedTouch_sensor.mode();
}

/**
 * generated comment
 * @param v 
 */
void CppTouchSensor::set_mode(::EV3PapyrusLibrary::Types::LocalString /*in*/v) {
	referencedTouch_sensor.set_mode(v);
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::ModeSet CppTouchSensor::modes() {
	return referencedTouch_sensor.modes();
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppTouchSensor::num_values() {
	return referencedTouch_sensor.num_values();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::port_name() {
	return referencedTouch_sensor.port_name();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::units() {
	return referencedTouch_sensor.units();
}

/**
 * generated comment
 * @return ret 
 * @param dir 
 * @param pattern 
 * @param match 
 */
::PrimitiveTypes::Boolean CppTouchSensor::connect(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/dir,
		::EV3PapyrusLibrary::Types::LocalString& /*in*/pattern,
		::EV3PapyrusLibrary::Types::MapStringSetString& /*in*/match) {
	return ((device*) &referencedTouch_sensor)->connect(dir, pattern, match);
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Boolean CppTouchSensor::connected() {
	return referencedTouch_sensor.connected();
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppTouchSensor::device_index() {
	return referencedTouch_sensor.device_index();
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::PrimitiveTypes::Integer CppTouchSensor::get_attr_int(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedTouch_sensor)->get_attr_int(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param value 
 */
void CppTouchSensor::set_attr_int(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
		::PrimitiveTypes::Integer /*in*/value) {
	return ((device*) &referencedTouch_sensor)->set_attr_int(name, value);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::get_attr_string(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedTouch_sensor)->get_attr_string(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param value 
 */
void CppTouchSensor::set_attr_string(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
		::EV3PapyrusLibrary::Types::LocalString& /*in*/value) {
	return ((device*) &referencedTouch_sensor)->set_attr_string(name, value);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::get_attr_line(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedTouch_sensor)->get_attr_line(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param pCur 
 */
::EV3PapyrusLibrary::Types::ModeSet CppTouchSensor::get_attr_set(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
		::EV3PapyrusLibrary::Types::LocalString* /*in*/pCur) {
	return ((device*) &referencedTouch_sensor)->get_attr_set(name, pCur);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::EV3PapyrusLibrary::Types::LocalString CppTouchSensor::get_attr_from_set(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedTouch_sensor)->get_attr_from_set(name);
}

/**
 * 
 * @return ret 
 */
::PrimitiveTypes::Boolean CppTouchSensor::isTouch() {
	return referencedTouch_sensor.value();
}

/**
 * 
 * @param portAdress 
 */
CppTouchSensor::CppTouchSensor(
		::EV3PapyrusLibrary::Types::PortType /*in*/portAdress) :
		referencedTouch_sensor(portAdress) {
}

} // of namespace Sensors
} // of namespace ev3devCpp
} // of namespace ConcreteClasses
} // of namespace EV3PapyrusLibrary

/************************************************************
 End of CppTouchSensor class body
 ************************************************************/
