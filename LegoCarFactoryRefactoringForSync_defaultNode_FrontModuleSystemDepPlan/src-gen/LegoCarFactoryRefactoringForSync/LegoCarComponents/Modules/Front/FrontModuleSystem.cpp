// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define LegoCarFactoryRefactoringForSync_LegoCarComponents_Modules_Front_FrontModuleSystem_BODY

/************************************************************
 FrontModuleSystem class body
 ************************************************************/

// include associated header file
#include "LegoCarFactoryRefactoringForSync/LegoCarComponents/Modules/Front/FrontModuleSystem.h"

// Derived includes directives

namespace LegoCarFactoryRefactoringForSync {
namespace LegoCarComponents {
namespace Modules {
namespace Front {

// static attributes (if any)

/**
 * 
 */
FrontModuleSystem::FrontModuleSystem() :
		frontmodulesystemController(this) {
}

/**
 * 
 */
void FrontModuleSystem::connectorConfiguration() {
	bindPorts(controller.pOutStopProcess_Shelf, shelf.pInStopProcess);
	bindPorts(controller.pOutStopProcess_RoboticArm, roboticArm.pStopProcess);
	bindPorts(convoyer.pInStopProcess, controller.pStopProcess_Convoyer);
	bindPorts(controller.pOutStopProcess_Press, press.pInStopProcess);
	bindPorts(controller.pOutRestart_Shelf, shelf.pInRestart);
	bindPorts(controller.pOutRestart_Convoyer, convoyer.pRestart);
	bindPorts(controller.pOutRestart_Robotic, roboticArm.pInRestart);
	bindPorts(controller.pOutRestart_Press, press.pInRestart);
	bindPorts(controller.pPrepare, convoyer.pPrepare);
	bindPorts(controller.pCheckRack, shelf.pCheckRack);
	bindPorts(controller.pDelivered, convoyer.pDelivered);
	bindPorts(roboticArm.pDelivered, convoyer.pDelivered);
	bindPorts(roboticArm.pStopProcess, convoyer.pInStopProcess);
	bindPorts(convoyer.pCheckRack, shelf.pCheckRack);
	bindPorts(convoyer.pErrDetect, controller.pErrDetect);
	bindPorts(convoyer.pEndOfMo_Control, controller.pEndOfMo);
	bindPorts(convoyer.pEndOfMo_Shelf, shelf.pEndOfMo);
	bindPorts(convoyer.pEndOfMo_Robotic, roboticArm.pEndOfMo);
	bindPorts(convoyer.pEndOfMo_Press, press.pEndOfMo);
	bindPorts(shelf.pErrDetect, controller.pErrDetect);
	bindPorts(shelf.pPickPiece, roboticArm.pPickPiece);
	bindPorts(convoyer.pOutAssemble, press.pPressAssemble);
	bindPorts(controller.pLCD, roboticArm.pLCD);
	bindPorts(controller.pLCD, shelf.pLCD);
	bindPorts(controller.pLCD, press.pLCD);
	bindPorts(controller.pLCD, convoyer.pLCD);
	bindPorts(controller.pModule, roboticArm.pModule);
	bindPorts(controller.pModule, convoyer.pModule);
	bindPorts(controller.pModule, shelf.pModule);
	bindPorts(controller.pModule, press.pModule);
	bindPorts(controller.pIFloatMotor, roboticArm.pIFloatMotor);
	bindPorts(controller.pILargeMotor, convoyer.pILargeMotor);
	bindPorts(controller.pPressILargeMotor, press.pILargeMotor);
	bindPorts(convoyer.pGotoProcess, roboticArm.pGotoProcess);
}

} // of namespace Front
} // of namespace Modules
} // of namespace LegoCarComponents
} // of namespace LegoCarFactoryRefactoringForSync

/************************************************************
 End of FrontModuleSystem class body
 ************************************************************/
