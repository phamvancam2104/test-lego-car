// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define EV3PapyrusLibrary_ConcreteClasses_ev3devCpp_EV3Brick_CppDevice_BODY

/************************************************************
              CppDevice class body
 ************************************************************/


// include associated header file
#include "EV3PapyrusLibrary/ConcreteClasses/ev3devCpp/EV3Brick/CppDevice.h"

// Derived includes directives


namespace EV3PapyrusLibrary {
namespace ConcreteClasses {
namespace ev3devCpp {
namespace EV3Brick {

// static attributes (if any)

/**
 * generated comment
 * @return ret 
 * @param dir 
 * @param pattern 
 * @param match 
 */
 ::PrimitiveTypes::Boolean CppDevice::connect(::EV3PapyrusLibrary::Types::LocalString& /*in*/ dir, ::EV3PapyrusLibrary::Types::LocalString& /*in*/ pattern, ::EV3PapyrusLibrary::Types::MapStringSetString& /*in*/ match) {
	return ((device*)&referencedDevice)->connect(dir , pattern , match);
}

/**
 * generated comment
 * @return ret 
 */
 ::PrimitiveTypes::Boolean CppDevice::connected() {
	return referencedDevice.connected();
}

/**
 * generated comment
 * @return ret 
 */
 ::PrimitiveTypes::Integer CppDevice::device_index() {
	return referencedDevice.device_index();
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
 ::PrimitiveTypes::Integer CppDevice::get_attr_int(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name) {
	return ((device*)&referencedDevice)->get_attr_int(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param value 
 */
 void CppDevice::set_attr_int(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name, ::PrimitiveTypes::Integer /*in*/ value) {
	((device*)&referencedDevice)->set_attr_int(name , value);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
 ::EV3PapyrusLibrary::Types::LocalString CppDevice::get_attr_string(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name) {
	return ((device*)&referencedDevice)->get_attr_string(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param value 
 */
 void CppDevice::set_attr_string(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name, ::EV3PapyrusLibrary::Types::LocalString& /*in*/ value) {
	((device*)&referencedDevice)->set_attr_string(name , value);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
 ::EV3PapyrusLibrary::Types::LocalString CppDevice::get_attr_line(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name) {
	return ((device*)&referencedDevice)->get_attr_line(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param pCur 
 */
 ::EV3PapyrusLibrary::Types::ModeSet CppDevice::get_attr_set(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name, ::EV3PapyrusLibrary::Types::LocalString* /*in*/ pCur) {
	return ((device*)&referencedDevice)->get_attr_set(name , pCur);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
 ::EV3PapyrusLibrary::Types::LocalString CppDevice::get_attr_from_set(::EV3PapyrusLibrary::Types::LocalString& /*in*/ name) {
	return ((device*)&referencedDevice)->get_attr_from_set(name);
}

/**
 * 
 */
CppDevice::CppDevice() {
}



} // of namespace EV3Brick
} // of namespace ev3devCpp
} // of namespace ConcreteClasses
} // of namespace EV3PapyrusLibrary

/************************************************************
              End of CppDevice class body
 ************************************************************/
