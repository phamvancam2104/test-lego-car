// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define EV3PapyrusLibrary_ConcreteClasses_ev3devCpp_EV3Brick_CppLed_BODY

/************************************************************
 CppLed class body
 ************************************************************/

// include associated header file
#include "EV3PapyrusLibrary/ConcreteClasses/ev3devCpp/EV3Brick/CppLed.h"

// Derived includes directives
#include "EV3PapyrusLibrary/Interfaces/EV3Brick/ILed.h"

namespace EV3PapyrusLibrary {
namespace ConcreteClasses {
namespace ev3devCpp {
namespace EV3Brick {

// static attributes (if any)

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppLed::max_brightness() {
	return referencedLed.max_brightness();
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppLed::brightness() {
	return referencedLed.brightness();
}

/**
 * generated comment
 * @param v 
 */
void CppLed::set_brightness(::PrimitiveTypes::Integer /*in*/v) {
	referencedLed.set_brightness(v);
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::ModeSet CppLed::triggers() {
	return referencedLed.triggers();
}

/**
 * generated comment
 * @return ret 
 */
::EV3PapyrusLibrary::Types::LocalString CppLed::trigger() {
	return referencedLed.trigger();
}

/**
 * generated comment
 * @param v 
 */
void CppLed::set_trigger(::EV3PapyrusLibrary::Types::LocalString /*in*/v) {
	referencedLed.set_trigger(v);
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppLed::delay_on() {
	return referencedLed.delay_on();
}

/**
 * generated comment
 * @param v 
 */
void CppLed::set_delay_on(::PrimitiveTypes::Integer /*in*/v) {
	referencedLed.set_delay_on(v);
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppLed::delay_off() {
	return referencedLed.delay_off();
}

/**
 * generated comment
 * @param v 
 */
void CppLed::set_delay_off(::PrimitiveTypes::Integer /*in*/v) {
	referencedLed.set_delay_off(v);
}

/**
 * generated comment
 * @return ret 
 */
float CppLed::brightness_pct() {
	return referencedLed.brightness_pct();
}

/**
 * generated comment
 * @param v 
 */
void CppLed::set_brightness_pct(float /*in*/v) {
	referencedLed.set_brightness_pct(v);
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::on() {
	return referencedLed.on();
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::off() {
	return referencedLed.off();
}

/**
 * generated comment
 * @return ret 
 * @param on_ms 
 * @param off_ms 
 */
void CppLed::flash(unsigned int /*in*/on_ms, unsigned int /*in*/off_ms) {
	return referencedLed.flash(on_ms, off_ms);
}

/**
 * generated comment
 * @return ret 
 * @param red 
 * @param green 
 */
void CppLed::mix_colors(float /*in*/red, float /*in*/green) {
	return referencedLed.mix_colors(red, green);
}

/**
 * generated comment
 * @return ret 
 * @param intensity 
 */
void CppLed::set_red(float /*in*/intensity) {
	referencedLed.set_red(intensity);
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::red_on() {
	return referencedLed.red_on();
}

/**
 * generated comment
 * @return ret 
 * @param intensity 
 */
void CppLed::set_green(float /*in*/intensity) {
	referencedLed.set_green(intensity);
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::green_on() {
	return referencedLed.green_on();
}

/**
 * generated comment
 * @return ret 
 * @param intensity 
 */
void CppLed::set_amber(float /*in*/intensity) {
	referencedLed.set_amber(intensity);
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::amber_on() {
	return referencedLed.amber_on();
}

/**
 * generated comment
 * @return ret 
 * @param intensity 
 */
void CppLed::set_orange(float /*in*/intensity) {
	referencedLed.set_orange(intensity);
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::orange_on() {
	return referencedLed.orange_on();
}

/**
 * generated comment
 * @return ret 
 * @param intensity 
 */
void CppLed::set_yellow(float /*in*/intensity) {
	referencedLed.set_yellow(intensity);
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::yellow_on() {
	return referencedLed.yellow_on();
}

/**
 * generated comment
 * @return ret 
 */
void CppLed::all_off() {
	return referencedLed.all_off();
}

/**
 * generated comment
 * @return ret 
 * @param dir 
 * @param pattern 
 * @param match 
 */
::PrimitiveTypes::Boolean CppLed::connect(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/dir,
		::EV3PapyrusLibrary::Types::LocalString& /*in*/pattern,
		::EV3PapyrusLibrary::Types::MapStringSetString& /*in*/match) {
	return ((device*) &referencedLed)->connect(dir, pattern, match);
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Boolean CppLed::connected() {
	return ((device*) &referencedLed)->connected();
}

/**
 * generated comment
 * @return ret 
 */
::PrimitiveTypes::Integer CppLed::device_index() {
	return ((device*) &referencedLed)->device_index();
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::PrimitiveTypes::Integer CppLed::get_attr_int(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedLed)->get_attr_int(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param value 
 */
void CppLed::set_attr_int(::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
		::PrimitiveTypes::Integer /*in*/value) {
	return ((device*) &referencedLed)->set_attr_int(name, value);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::EV3PapyrusLibrary::Types::LocalString CppLed::get_attr_string(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedLed)->get_attr_string(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param value 
 */
void CppLed::set_attr_string(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
		::EV3PapyrusLibrary::Types::LocalString& /*in*/value) {
	((device*) &referencedLed)->set_attr_string(name, value);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::EV3PapyrusLibrary::Types::LocalString CppLed::get_attr_line(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedLed)->get_attr_line(name);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 * @param pCur 
 */
::EV3PapyrusLibrary::Types::ModeSet CppLed::get_attr_set(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
		::EV3PapyrusLibrary::Types::LocalString* /*in*/pCur) {
	return ((device*) &referencedLed)->get_attr_set(name, pCur);
}

/**
 * generated comment
 * @return ret 
 * @param name 
 */
::EV3PapyrusLibrary::Types::LocalString CppLed::get_attr_from_set(
		::EV3PapyrusLibrary::Types::LocalString& /*in*/name) {
	return ((device*) &referencedLed)->get_attr_from_set(name);
}

/**
 * 
 * @param ledPath 
 */
CppLed::CppLed(::EV3PapyrusLibrary::Types::LocalString /*in*/ledPath) :
		referencedLed(ledPath), cppledController(this) {
}

} // of namespace EV3Brick
} // of namespace ev3devCpp
} // of namespace ConcreteClasses
} // of namespace EV3PapyrusLibrary

/************************************************************
 End of CppLed class body
 ************************************************************/
