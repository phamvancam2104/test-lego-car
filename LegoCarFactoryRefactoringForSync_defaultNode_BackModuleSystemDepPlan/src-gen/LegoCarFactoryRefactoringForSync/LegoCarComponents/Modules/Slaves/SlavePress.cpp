// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define LegoCarFactoryRefactoringForSync_LegoCarComponents_Modules_Slaves_SlavePress_BODY

/************************************************************
              SlavePress class body
 ************************************************************/


// include associated header file
#include "LegoCarFactoryRefactoringForSync/LegoCarComponents/Modules/Slaves/SlavePress.h"

// Derived includes directives
#include "CarFactoryLibrary/events/EndOfModule.h"
#include "CarFactoryLibrary/events/PressAssemble.h"
#include "EV3PapyrusLibrary/Interfaces/Actuators/ILargeMotor.h"
#include "LegoCarFactoryRefactoringForSync/signals/RestartAfterEmergencyStop.h"
#include "LegoCarFactoryRefactoringForSync/signals/StopProcess.h"


namespace LegoCarFactoryRefactoringForSync {
namespace LegoCarComponents {
namespace Modules {
namespace Slaves {

// static attributes (if any)

/**
 * 
 */
void SlavePress::init() {
	go_top();
	counter = 1;
}

/**
 * 
 */
void SlavePress::effectFromChoicetoPress() {
	counter++;
}

/**
 * 
 * @return ret 
 */
 bool SlavePress::() {
	return counter == 2;
}

/**
 * 
 */
void SlavePress::SetStatusIsReady() {
	set_status(RESULT_READY);
}

/**
 * 
 */
void SlavePress::lift_up() {
	lift_up();
}

/**
 * 
 */
void SlavePress::go_top() {
	go_top();
}

/**
 * 
 */
void SlavePress::assemble() {
	assemble();
}

/**
 * 
 */
SlavePress::SlavePress(): CarFactoryLibrary::Press("outD") {
}



} // of namespace Slaves
} // of namespace Modules
} // of namespace LegoCarComponents
} // of namespace LegoCarFactoryRefactoringForSync

/************************************************************
              End of SlavePress class body
 ************************************************************/
