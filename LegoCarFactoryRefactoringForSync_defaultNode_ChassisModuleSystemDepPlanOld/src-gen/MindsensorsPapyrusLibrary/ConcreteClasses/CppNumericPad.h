// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef MINDSENSORSPAPYRUSLIBRARY_CONCRETECLASSES_CPPNUMERICPAD_H
#define MINDSENSORSPAPYRUSLIBRARY_CONCRETECLASSES_CPPNUMERICPAD_H

/************************************************************
 CppNumericPad class header
 ************************************************************/

#include "MindsensorsPapyrusLibrary/ConcreteClasses/Pkg_ConcreteClasses.h"

#include "AnsiCLibrary/Pkg_AnsiCLibrary.h"
#include "EV3PapyrusLibrary/ConcreteClasses/ev3devCpp/EV3Brick/CppDevice.h"
#include "EV3PapyrusLibrary/Types/Pkg_Types.h"
#include "LegoCarFactoryRefactoringForSync/__Architecture__Controller/ConcreteClassesCppNumericPad__Controller.h"
#include "MindsensorsPapyrusLibrary/AbstractClasses/AbstractNumericPad.h"
#include "MindsensorsPapyrusLibrary/Interfaces/INumericPad.h"
#include "PrimitiveTypes/Pkg_PrimitiveTypes.h"

// Include from Include stereotype (header)
#include "numeric_pad.h"
using namespace ev3dev;
namespace MindsensorsPapyrusLibrary {
namespace Interfaces {
class INumericPad;
}
}

// End of Include stereotype (header)

namespace MindsensorsPapyrusLibrary {
namespace ConcreteClasses {

/************************************************************/
/**
 * 
 */
class CppNumericPad: public ::MindsensorsPapyrusLibrary::Interfaces::INumericPad,
		public ::MindsensorsPapyrusLibrary::AbstractClasses::AbstractNumericPad,
		public ::EV3PapyrusLibrary::ConcreteClasses::ev3devCpp::EV3Brick::CppDevice {
public:
	/**
	 * 
	 */
	numeric_pad referencedNumeric_pad;
	/**
	 * 
	 */
	::LegoCarFactoryRefactoringForSync::__Architecture__Controller::ConcreteClassesCppNumericPad__Controller cppnumericpadController;
	/**
	 * 
	 */
	ProvidedPort<MindsensorsPapyrusLibrary::Interfaces::INumericPad> numericPadPort;
	/**
	 * 
	 * @return ret 
	 */
	::PrimitiveTypes::Integer read_current_touched_key();
	/**
	 * 
	 * @return ret 
	 */
	::PrimitiveTypes::Integer read_next_touched_key();
	/**
	 * generated comment
	 * @return ret 
	 * @param dir 
	 * @param pattern 
	 * @param match 
	 */
	::PrimitiveTypes::Boolean connect(
			::EV3PapyrusLibrary::Types::LocalString& /*in*/dir,
			::EV3PapyrusLibrary::Types::LocalString& /*in*/pattern,
			::EV3PapyrusLibrary::Types::MapStringSetString& /*in*/match);
	/**
	 * generated comment
	 * @return ret 
	 */
	::PrimitiveTypes::Boolean connected();
	/**
	 * generated comment
	 * @return ret 
	 */
	::PrimitiveTypes::Integer device_index();
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 */
	::PrimitiveTypes::Integer get_attr_int(
			::EV3PapyrusLibrary::Types::LocalString& /*in*/name);
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 * @param value 
	 */
	void set_attr_int(::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
			::PrimitiveTypes::Integer /*in*/value);
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 */
	::EV3PapyrusLibrary::Types::LocalString get_attr_string(
			::EV3PapyrusLibrary::Types::LocalString& /*in*/name);
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 * @param value 
	 */
	void set_attr_string(::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
			::EV3PapyrusLibrary::Types::LocalString& /*in*/value);
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 */
	::EV3PapyrusLibrary::Types::LocalString get_attr_line(
			::EV3PapyrusLibrary::Types::LocalString& /*in*/name);
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 * @param pCur 
	 */
	::EV3PapyrusLibrary::Types::ModeSet get_attr_set(
			::EV3PapyrusLibrary::Types::LocalString& /*in*/name,
			::EV3PapyrusLibrary::Types::LocalString* /*in*/pCur = nullptr);
	/**
	 * generated comment
	 * @return ret 
	 * @param name 
	 */
	::EV3PapyrusLibrary::Types::LocalString get_attr_from_set(
			::EV3PapyrusLibrary::Types::LocalString& /*in*/name);
	/**
	 * 
	 * @param port 
	 */
	CppNumericPad(::EV3PapyrusLibrary::Types::LocalString /*in*/port);

};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace ConcreteClasses
} // of namespace MindsensorsPapyrusLibrary

/************************************************************
 End of CppNumericPad class header
 ************************************************************/

#endif
