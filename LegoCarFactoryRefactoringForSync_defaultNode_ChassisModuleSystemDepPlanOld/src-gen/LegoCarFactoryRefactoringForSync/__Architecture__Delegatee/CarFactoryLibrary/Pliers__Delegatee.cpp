// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define LegoCarFactoryRefactoringForSync___Architecture__Delegatee_CarFactoryLibrary_Pliers__Delegatee_BODY

/************************************************************
              Pliers__Delegatee class body
 ************************************************************/


// include associated header file
#include "LegoCarFactoryRefactoringForSync/__Architecture__Delegatee/CarFactoryLibrary/Pliers__Delegatee.h"

// Derived includes directives
#include "CarFactoryLibrary/Pliers.h"
#include "EV3PapyrusLibrary/Interfaces/Actuators/IServoMotor.h"


namespace LegoCarFactoryRefactoringForSync {
namespace __Architecture__Delegatee {
namespace CarFactoryLibrary {

// static attributes (if any)

/**
 * 
 * @param comp 
 */
void Pliers__Delegatee::setComponent(::CarFactoryLibrary::Pliers* /*in*/ comp) {
	this->component = comp;
	this->get_plierMotor();
}

/**
 * 
 */
Pliers__Delegatee::Pliers__Delegatee() {
}

/**
 * 
 * @return ret 
 */
 ::EV3PapyrusLibrary::Interfaces::Actuators::IServoMotor* Pliers__Delegatee::get_plierMotor() {
	//array pattern: mul(A)*mul(pA) = mul(B) * mul(pB)
	//mul(A) = 1 (delegation), if mul(pA) = 1 => mul(B) = 1 and mul(pB) = 1
	component->plierMotor.providedIntf = component->motor.CppServoMotorDelegatee.get_servoMotorPort();
	return component->plierMotor.providedIntf;
}



} // of namespace CarFactoryLibrary
} // of namespace __Architecture__Delegatee
} // of namespace LegoCarFactoryRefactoringForSync

/************************************************************
              End of Pliers__Delegatee class body
 ************************************************************/
