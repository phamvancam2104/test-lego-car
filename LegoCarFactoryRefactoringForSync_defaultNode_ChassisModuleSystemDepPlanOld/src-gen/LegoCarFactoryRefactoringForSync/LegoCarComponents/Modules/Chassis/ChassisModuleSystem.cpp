// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define LegoCarFactoryRefactoringForSync_LegoCarComponents_Modules_Chassis_ChassisModuleSystem_BODY

/************************************************************
 ChassisModuleSystem class body
 ************************************************************/

// include associated header file
#include "LegoCarFactoryRefactoringForSync/LegoCarComponents/Modules/Chassis/ChassisModuleSystem.h"

// Derived includes directives

namespace LegoCarFactoryRefactoringForSync {
namespace LegoCarComponents {
namespace Modules {
namespace Chassis {

// static attributes (if any)

/**
 * 
 */
ChassisModuleSystem::ChassisModuleSystem() :
		chassismodulesystemController(this) {
}

/**
 * 
 */
void ChassisModuleSystem::connectorConfiguration() {
	bindPorts(chassisController.pOutStopProcess_Shelf, shelf.pInStopProcess);
	bindPorts(chassisController.pOutStopProcess_RoboticArm,
			robotic_arm.pInStopProcess);
	bindPorts(chassisController.pStopProcess_Convoyer, convoyer.pStopProcess);
	bindPorts(chassisController.pOutRestart_Shelf, shelf.pInRestart);
	bindPorts(chassisController.pOutRestart_Robotic, robotic_arm.pInRestart);
	bindPorts(chassisController.pPrepare, convoyer.pPrepare);
	bindPorts(robotic_arm.pDelivered, convoyer.pDelivered);
	bindPorts(convoyer.pCheckRack, shelf.pCheckRack);
	bindPorts(convoyer.pErrDetect, chassisController.pErrDetect);
	bindPorts(convoyer.pEndOfMo_Control, chassisController.pEndOfMo);
	bindPorts(convoyer.pEndOfMo_Shelf, shelf.pEndOfMo);
	bindPorts(convoyer.pEndOfMo_Robotic, robotic_arm.pEndOfMo);
	bindPorts(shelf.pErrDetect, chassisController.pErrDetect);
	bindPorts(shelf.pPickPiece, robotic_arm.pPickPiece);
	bindPorts(chassisController.pOutRestart_Convoyer, convoyer.pRestart);
	bindPorts(chassisController.pLCD, convoyer.pLCD);
	bindPorts(chassisController.pModule, convoyer.pModule);
	bindPorts(chassisController.pModule, robotic_arm.pModule);
	bindPorts(chassisController.pLCD, robotic_arm.pLCD);
	bindPorts(chassisController.pModule, shelf.pModule);
	bindPorts(chassisController.pLCD, shelf.pLCD);
}

} // of namespace Chassis
} // of namespace Modules
} // of namespace LegoCarComponents
} // of namespace LegoCarFactoryRefactoringForSync

/************************************************************
 End of ChassisModuleSystem class body
 ************************************************************/
