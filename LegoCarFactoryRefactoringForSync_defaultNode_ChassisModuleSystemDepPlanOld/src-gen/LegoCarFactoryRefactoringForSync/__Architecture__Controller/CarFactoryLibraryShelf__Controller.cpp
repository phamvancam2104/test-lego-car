// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define LegoCarFactoryRefactoringForSync___Architecture__Controller_CarFactoryLibraryShelf__Controller_BODY

/************************************************************
 CarFactoryLibraryShelf__Controller class body
 ************************************************************/

// include associated header file
#include "LegoCarFactoryRefactoringForSync/__Architecture__Controller/CarFactoryLibraryShelf__Controller.h"

// Derived includes directives
#include "CarFactoryLibrary/IModule.h"
#include "CarFactoryLibrary/Shelf.h"
#include "EV3PapyrusLibrary/IColorSensor.h"
#include "EV3PapyrusLibrary/Interfaces/EV3Brick/ILcd.h"

namespace LegoCarFactoryRefactoringForSync {
namespace __Architecture__Controller {

// static attributes (if any)

/**
 * 
 * @param origin 
 */
CarFactoryLibraryShelf__Controller::CarFactoryLibraryShelf__Controller(
		::CarFactoryLibrary::Shelf* /*in*/origin) :
		p_origin(origin) {
}

/**
 * 
 * @return ret 
 */
::EV3PapyrusLibrary::IColorSensor* CarFactoryLibraryShelf__Controller::get_sensor1() {
	p_origin->sensor1.providedIntf =
			p_origin->rack_1.rackController.get_sensor();
	return p_origin->sensor1.providedIntf;
}

/**
 * 
 * @return ret 
 */
::EV3PapyrusLibrary::IColorSensor* CarFactoryLibraryShelf__Controller::get_sensor2() {
	p_origin->sensor2.providedIntf =
			p_origin->rack_2.rackController.get_sensor();
	return p_origin->sensor2.providedIntf;
}

/**
 * 
 * @return ret 
 */
::EV3PapyrusLibrary::IColorSensor* CarFactoryLibraryShelf__Controller::get_sensor3() {
	p_origin->sensor3.providedIntf =
			p_origin->rack_3.rackController.get_sensor();
	return p_origin->sensor3.providedIntf;
}

/**
 * 
 * @param ref 
 */
void CarFactoryLibraryShelf__Controller::connect_pLCD(
		::EV3PapyrusLibrary::Interfaces::EV3Brick::ILcd* /*in*/ref) {
	p_origin->pLCD.requiredIntf = ref;
}

/**
 * 
 * @param ref 
 */
void CarFactoryLibraryShelf__Controller::connect_pModule(
		::CarFactoryLibrary::IModule* /*in*/ref) {
	p_origin->pModule.requiredIntf = ref;
}

} // of namespace __Architecture__Controller
} // of namespace LegoCarFactoryRefactoringForSync

/************************************************************
 End of CarFactoryLibraryShelf__Controller class body
 ************************************************************/
