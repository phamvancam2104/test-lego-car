// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef CARFACTORYLIBRARY_SHELF_H
#define CARFACTORYLIBRARY_SHELF_H

/************************************************************
 Shelf class header
 ************************************************************/

#include "CarFactoryLibrary/Pkg_CarFactoryLibrary.h"

#include "AnsiCLibrary/Pkg_AnsiCLibrary.h"
#include "CarFactoryLibrary/Rack.h"
#include "EV3PapyrusLibrary/Types/Pkg_Types.h"

// Include from Include stereotype (header)
namespace EV3PapyrusLibrary {
class IColorSensor;
}
namespace EV3PapyrusLibrary {
namespace Interfaces {
namespace EV3Brick {
class ILcd;
}
}
}

// End of Include stereotype (header)

namespace CarFactoryLibrary {
namespace events {
class CheckRack;
}
}
namespace CarFactoryLibrary {
namespace events {
class EndOfModule;
}
}

namespace CarFactoryLibrary {

/************************************************************/
/**
 * 
 */
class Shelf {
public:
	/**
	 * number of rack there are
	 */
	int number_rack;
	/**
	 * the first rack
	 */
	Rack rack_1;
	/**
	 * the second rack
	 */
	Rack rack_2;
	/**
	 * the third rack if there is
	 */
	Rack rack_3;
	/**
	 * 
	 */
	ProvidedPort<EV3PapyrusLibrary::IColorSensor> sensor1;
	/**
	 * 
	 */
	RequiredPort<EV3PapyrusLibrary::Interfaces::EV3Brick::ILcd> pLCD;
	/**
	 * check if the rack number rack_number is empty
	 * @param rack_number rack number to check
	 * @return ret true if the rack is empty  and false otherwise
	 */
	bool is_empty(int /*in*/rack_number);
	/**
	 * constructor of the Shelf
	 * @param number_rack_sensor number of rack there are
	 * @param rack_sensorPort1 port name of rack 1
	 * @param rack_sensorPort2 port name of the rack 2
	 * @param rack_sensorPort3 port name of the rack 3
	 */
	Shelf(int /*in*/number_rack_sensor = 0,
			::EV3PapyrusLibrary::Types::LocalString /*in*/rack_sensorPort1 =
					"in1",
			::EV3PapyrusLibrary::Types::LocalString /*in*/rack_sensorPort2 =
					"in1",
			::EV3PapyrusLibrary::Types::LocalString /*in*/rack_sensorPort3 =
					"in1");
	/**
	 * 
	 * @return ret 
	 * @param sig 
	 */
	void sendCheckRack(::CarFactoryLibrary::events::CheckRack& /*in*/sig);
	/**
	 * 
	 * @param sig 
	 * @return ret 
	 */
	void sendEndOfModule(::CarFactoryLibrary::events::EndOfModule& /*in*/sig);
	/**
	 * 
	 */
	void connectorConfiguration();

};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace CarFactoryLibrary

/************************************************************
 End of Shelf class header
 ************************************************************/

#endif
